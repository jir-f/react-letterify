{"version":3,"sources":["view/components/input/input.tsx","view/components/checkbox/checkbox.tsx","view/components/direction/direction.tsx","view/options/directions.tsx","view/components/options/options.tsx","lib/letterify/Styled-Letterify.tsx","lib/letterify/Letterify.tsx","view/example.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Input","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","inputLabel","type","inputType","name","inputName","value","inputString","placeholder","onChange","handleInputChange","Component","Checkbox","_this","checked","handler","label","Directions","renderOptions","options","map","item","key","checkbox_Checkbox","optionLabel","optionValue","currentOption","DirectionOptions","Example","direction_Directions","currentDirection","directionHandler","input_Input","concat","currentDelay","handleDelayChange","currentSpeed","handleSpeedChange","currentTranslate","handleTranslateChange","LetterifyStyle","styled","span","_templateObject","theme","color","attrs","opacity","xValue","yValue","timing","delay","Letterify","letterify","passedSentence","length","splitLetters","result","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","c","t","state","speed","directionAttrs","x","y","push","err","return","getLetterifyClasses","styleClasses","spacing","forEach","direction","letterifyString","nextProps","directionValues","propsVerifier","animate","translateValue","handleChange","e","target","setState","parseFloat","handleDirection","option","buttonClick","_this2","Letterify_Letterify","options_Example","onClick","App","animate2","example_Example","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7617252.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { InputProps, InputState } from './interface';\n\nexport default class Input extends Component<InputProps, InputState>{\n  constructor(props: InputProps){\n    super(props);\n  }\n\n  render(){\n    return(\n      <div className=\"input__wrapper\">\n        <label>{this.props.inputLabel}</label>\n        <input \n          type={this.props.inputType}\n          name={this.props.inputName} \n          className=\"h5\" \n          value={this.props.inputString} \n          placeholder={this.props.placeholder} \n          onChange={this.props.handleInputChange} />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { CheckboxProps, CheckboxState } from './interface';\n\nexport default class Checkbox extends Component<CheckboxProps, CheckboxState>{\n  constructor(props: CheckboxProps) {\n\t\tsuper(props);\n\t}\n\n  render() {\n    return (\n      <label className=\"letterify__checkbox\">\n        <input \n          className=\"letterify__checkbox-input\"\n          type=\"checkbox\"\n          name={ this.props.value } \n          checked={ this.props.checked }\n          onChange={ () => this.props.handler(this.props.value) }\n        />\n        <span className=\"letterify__checkbox-text\">\n          {this.props.label}\n        </span>\n      </label>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { DirectionProps, DirectionState } from './interface';\nimport { Checkbox } from '../checkbox';\n\nexport default class Directions extends Component<DirectionProps, DirectionState>{\n\n  renderOptions = () => {\n    return this.props.options.map((item, key) => {\n      return (\n        <Checkbox \n          label={item.optionLabel}\n          value={item.optionValue}\n          checked={this.props.currentOption === item.optionValue ? true : false}\n          handler={this.props.handler}\n          key={key}\n        />\n      );\n    });\n  }\n\n  render(){\n    return(\n      <div className=\"letterify__options_directions\">\n        <label>Direction</label>\n        <div className=\"letterify__options_directions-checkboxes\">\n          {this.renderOptions()}\n        </div>\n      </div>\n    );\n  }\n}","export const DirectionOptions = [\n  {\n    optionLabel: \"Up\",\n    optionValue: \"up\"\n  },\n  {\n    optionLabel: \"Down\",\n    optionValue: \"down\"\n  },\n  {\n    optionLabel: \"Left\",\n    optionValue: \"left\"\n  },\n  {\n    optionLabel: \"Right\",\n    optionValue: \"right\"\n  },\n  {\n    optionLabel: \"In place\",\n    optionValue: \"inplace\"\n  }\n]","import React, { Component } from 'react';\nimport { OptionsProps, OptionsState } from './interface';\nimport { Directions } from '../direction';\nimport { DirectionOptions } from '../../options/directions';\nimport { Input } from '../input';\n\nexport default class Example extends Component<OptionsProps, OptionsState>{\n  render(){\n    return(\n      <div className=\"letterify__options\">\n        <Directions \n          options= {DirectionOptions}\n          currentOption={this.props.currentDirection}\n          handler={this.props.directionHandler}\n        />\n        <Input \n          inputLabel=\"Delay in milliseconds\"\n          inputType=\"number\"\n          inputString={`${this.props.currentDelay}`}\n          inputName=\"delay\"\n          placeholder={\"Delay in milliseconds\"}\n          handleInputChange={this.props.handleDelayChange}\n        />\n        <Input \n          inputLabel=\"Speed in milliseconds\"\n          inputType=\"number\"\n          inputString={`${this.props.currentSpeed}`}\n          inputName=\"speed\"\n          placeholder={\"Speed in milliseconds\"}\n          handleInputChange={this.props.handleSpeedChange}\n        />\n        <Input\n          inputLabel=\"Translate in pixels\"\n          inputType=\"number\" \n          inputString={`${this.props.currentTranslate}`}\n          inputName=\"translate\"\n          placeholder={\"Translate in pixels\"}\n          handleInputChange={this.props.handleTranslateChange}\n        />\n      </div>\n    );\n  }\n}","import styled, {keyframes} from 'styled-components';\n\nexport const LetterifyStyle = styled.span`\n\tcolor: ${props => props.theme.color};\n\tdisplay: inline-block;\n\tfont-weight: bold;\n\tmargin: 0 2px;\n\topacity: ${props => props.theme.attrs.opacity};\n\ttransform: ${props => `translate(${props.theme.attrs.xValue}px, ${props.theme.attrs.yValue}px)`};\n\ttransition: ${props => `all ${props.theme.timing}s ease ${props.theme.delay}s`}\n`;","import React, { Component } from 'react';\nimport { LetterifyStyle } from './Styled-Letterify';\n\n/// <reference path=\"./interface.d.ts\"/>\n\nexport default class Letterify extends Component<LetterifyProps, LetterifyState>{\n\tconstructor(props: LetterifyProps) {\n\t\tsuper(props);\n\t\tthis.state={opacity: 0,\n\t\t\tdirection: 'inplace',\n\t\t\tspeed: 5,\n\t\t\tdelay: 0.1,\n\t\t\tdirectionAttrs: {x: 0, y: 0},\n\t\t\tcolor: '#000000'\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromProps(nextProps: LetterifyProps){\n\t\tconst directionValues = Letterify.propsVerifier(nextProps);\n\t\treturn ({\n\t\t\topacity: nextProps.animate ? 1 : 0,\n\t\t\tdirection: nextProps.direction,\n\t\t\tspeed: nextProps.speed ? nextProps.speed : 5,\n\t\t\tdelay: nextProps.delay ? nextProps.delay : 0.1,\n\t\t\tdirectionAttrs: directionValues,\n\t\t\tcolor: nextProps.color ? `#${nextProps.color}` : '#000000'\n\t\t});\n\t}\n\n\tletterify = (passedSentence: string) => {\n\t\tif(passedSentence && passedSentence.length > 0){\n\t\t\treturn(\n\t\t\t\t<span className='letterify__word'>\n\t\t\t\t\t{this.splitLetters(passedSentence)}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t}\n\n\tsplitLetters = (passedSentence: string)=>{\n\t\tconst result: JSX.Element[] = [];\n\t\tvar i: number = 1;\n\n\t\tfor (var c of passedSentence) {\n\t\t\tconst t = {timing: this.state.speed, \n\t\t\t\tdelay: i * this.state.delay,\n\t\t\t\tcolor: this.state.color, \n\t\t\t\tattrs: {\n\t\t\t\t\t\topacity: this.state.opacity,\n\t\t\t\t\t\txValue: this.state.directionAttrs.x,\n\t\t\t\t\t\tyValue: this.state.directionAttrs.y,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tresult.push(<LetterifyStyle theme={t} className='letterify__word_char' key={i = i+1}>{c}</LetterifyStyle>)\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tgetLetterifyClasses = () => {\n\t\tif(this.props.styleClasses){\n\t\t\tvar result: string = '';\n\t\t\tconst spacing: string = this.props.styleClasses.length > 1 ? ' ' : '';\n\t\t\tthis.props.styleClasses.forEach((item) => {\n\t\t\t\treturn result = result + item + spacing;\n\t\t\t});\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn ('no__styleclass');\n\t\t}\n\t}\n\n\tstatic propsVerifier = (props: LetterifyProps) => {\n\t\tif (props.direction === 'up'){\n\t\t\tif(props.animate){\n\t\t\t\treturn ({x: 0, y: 0});\n\t\t\t} else {\n\t\t\t\treturn({x: 0, y: props.translateValue ? props.translateValue : 10});\n\t\t\t}\n\t\t}\n\t\telse if (props.direction === 'down'){\n\t\t\tif(props.animate){\n\t\t\t\treturn ({x: 0, y: 0});\n\t\t\t} else {\n\t\t\t\treturn({x: 0, y: props.translateValue ? -1 * props.translateValue : -10});\n\t\t\t}\n\t\t}\n\t\telse if (props.direction === 'right'){\n\t\t\tif(props.animate){\n\t\t\t\treturn ({x: 0, y: 0});\n\t\t\t} else {\n\t\t\t\treturn({x: props.translateValue ? -1 * props.translateValue : -10, y: 0});\n\t\t\t}\n\t\t}\n\t\telse if (props.direction === 'left'){\n\t\t\tif(props.animate){\n\t\t\t\treturn ({x: 0, y: 0});\n\t\t\t} else {\n\t\t\t\treturn({x: props.translateValue ? props.translateValue : -10, y: 0});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn ({x: 0, y: 0});\n\t\t}\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className={this.getLetterifyClasses()}>\n\t\t\t\t{this.letterify(this.props.letterifyString)}\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport { ExampleProps, ExampleState } from './interface';\nimport { Input } from './components/input';\nimport { Options } from './components/options';\nimport { Letterify } from '../lib';\n\n\nexport default class Example extends Component<ExampleProps, ExampleState>{\n  constructor(props: ExampleProps){\n    super(props);\n    this.state = {\n      inputString: '',\n      currentDirection: 'inplace',\n      currentDelay: 0.1,\n      currentSpeed: 0.3,\n      currentTranslate: 40,\n      animate: false\n    };  \n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const key = e.target.name;\n    const value = e.target.value;\n    switch(key){\n      case 'animatedText':\n        this.setState({ inputString: value });\n        break;\n      case 'delay':\n        this.setState({ currentDelay: parseFloat(value) });\n        break;\n      case 'speed':\n        this.setState({ currentSpeed: +value });\n        break;\n      case 'translate':\n        this.setState({ currentTranslate: +value });\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleDirection = (option: string) => {\n    this.setState({\n      currentDirection: option\n    } as ExampleState);\n  }\n\n  buttonClick = (state: boolean) => {\n    if ( this.state.inputString.length > 0 ) {\n      this.setState({\n        animate: state\n      });\n    } \n  }\n\n  render() {\n    return (\n      <div className='example'>\n        <h1>React letterify</h1>        \n        <Letterify \n          styleClasses={['lettterify-me', 'example_text']}\n          letterifyString={this.state.inputString}\n          animate={this.state.animate}\n          direction={this.state.currentDirection}\n          delay={this.state.currentDelay}\n          speed={this.state.currentSpeed}\n          translateValue={this.state.currentTranslate}\n          color={'0077be'}\n        />\n        <Input \n          inputType=\"text\"\n          inputString={this.state.inputString}\n          placeholder={\"String to animate\"}\n          handleInputChange={this.handleChange}\n          inputName='animatedText'\n        />\n        <Options \n          currentDelay={this.state.currentDelay}\n          handleDelayChange={this.handleChange}\n          currentSpeed={this.state.currentSpeed}\n          handleSpeedChange={this.handleChange}\n          currentTranslate={this.state.currentTranslate}\n          handleTranslateChange={this.handleChange}\n          currentDirection={this.state.currentDirection}\n          directionHandler={this.handleDirection}\n        />\n        <div className=\"example_buttons\">\n          <button className=\"btn\" onClick={() => this.buttonClick(true)}>\n            animate\n          </button>\n          <button className=\"btn\" onClick={() => this.buttonClick(false)}>\n            remove\n          </button>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Example from './view/example';\n\nclass App extends Component<any, any>{\n  constructor(props: any) {\n    super(props);\n    this.state={animate: false, animate2: false};\n  }\n\n  buttonClick = () => {\n    this.setState({\n      animate: !this.state.animate,\n      animate2: !this.state.animate2\n    });\n  }\n  render() {\n    return (\n      <div className=\"react-letterify\">\n        <Example/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/style.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}